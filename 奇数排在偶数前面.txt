输入一个整数数组，实现一个函数来调整该数组中数字的顺序，使得所有奇数位于数组的前半部分，所有偶数位于数组的后半部分。

 

示例：

输入：nums = [1,2,3,4]
输出：[1,3,2,4] 
注：[3,1,2,4] 也是正确的答案之一。

class Solution {
    public int[] exchange(int[] nums) {
            int high=nums.length-1;
            int low=0;
         
            while(low<high){
                
                while(low<high && nums[low]%2!=0){low++;}
               
                while(low<high && nums[high]%2==0){high--;}
                if(low<high) {
                    int temp=nums[low];
                    nums[low]=nums[high];
                    nums[high]=temp;
                }
           
            }
            return nums;
    }
}
官方：
class Solution {
public:
    vector<int> exchange(vector<int>& nums) {
        int left = 0, right = nums.size() - 1;
        while (left < right) {
            if ((nums[left] & 1) != 0) {
                left ++;
                continue;
            }
            if ((nums[right] & 1) != 1) {
                right --;
                continue;
            }
            swap(nums[left++], nums[right--]);
        }
        return nums;
    }
};


著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。