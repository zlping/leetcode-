/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int maxDepth(TreeNode root) {
    /*投机return root == null ? 0 : Math.max(maxDepth(root.left), maxDepth(root.right)) + 1;*/
    /*递归写法*/
        if(root == null) return 0;
        int lh = maxDepth(root.left)+1;
        int rh = maxDepth(root.right)+1;
        return lh > rh ? lh : rh;
    }
}
层次遍历非递归
def maxDepth(self, root: TreeNode) -> int:
	if not root: return 0;
	level, queue = 0, [root]
	while queue:
		count = len(queue)
		while count:
			if p.left: queue.append(p.left)
			if p.right: queue.append(p.right)
			count-=1
		level += 1
	return level
	
  
 